version: '3.8'

services:
  # Spring Boot Application
  app:
    image: ${DOCKERHUB_USERNAME}/salemale:latest
    container_name: salemale-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Database Configuration (RDS)
      LOCAL_DB_URL: ${LOCAL_DB_URL}
      LOCAL_DB_USERNAME: ${LOCAL_DB_USERNAME}
      LOCAL_DB_PASSWORD: ${LOCAL_DB_PASSWORD}
      
      # Admin Configuration
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      
      # Application Configuration
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SERVER_PORT: ${SERVER_PORT}
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      # 애플리케이션 프로퍼티 키와 일치하는 만료값 전달
      JWT_ACCESS_TOKEN_VALIDITY: ${JWT_ACCESS_TOKEN_VALIDITY}
      JWT_REFRESH_TOKEN_VALIDITY: ${JWT_REFRESH_TOKEN_VALIDITY}
      
      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Mail Configuration
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      
      # Frontend URL
      FRONTEND_URL: ${FRONTEND_URL}
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7.2
    container_name: salemale-redis
    restart: unless-stopped
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s

volumes:
  redis-data:
