spring:
  application:
    name: salemale
  
  # # 관리자 계정 (환경변수)
  # security:
  #   user:
  #     name: ${ADMIN_USERNAME}
  #     password: ${ADMIN_PASSWORD}
  
  # PostgreSQL 데이터베이스
  datasource:
    url: ${LOCAL_DB_URL}
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  
  # JPA/Hibernate 설정
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        default_batch_fetch_size: 1000
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  
  # Flyway 마이그레이션 설정
  flyway:
    enabled: false
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration
  
  # Gmail SMTP 이메일 설정
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GOOGLE_EMAIL}
    password: ${GOOGLE_APP_PW}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
  
  # Redis 설정 (하드코딩)
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 3000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  # OAuth2 설정 (카카오/네이버)
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-name: Kakao
            redirect-uri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: profile_nickname,profile_image
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_REDIRECT_URI}
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: name, email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: id

# 로그 설정
logging:
  level:
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql: TRACE
    org.springframework.security.oauth2: DEBUG
    org.springframework.security: DEBUG

# Swagger 설정
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

# Actuator 설정 (health, info 노출)
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: when_authorized

# JWT 설정: jjwt에서 사용할 비밀키와 만료시간(ms)
jwt:
  secret: ${JWT_SECRET}
  access-token-validity: ${JWT_ACCESS_TOKEN_VALIDITY}
  refresh-token-validity: ${JWT_REFRESH_TOKEN_VALIDITY}

# Frontend URL (OAuth2 리다이렉트용)
FRONTEND_URL: ${FRONTEND_URL:http://localhost:3000}

# 비밀번호 재설정 설정
password:
  reset:
    code-validity-minutes: 30  # 인증 코드 유효 시간(분)
    token-validity-minutes: 10  # 세션 토큰 유효 시간(분)
